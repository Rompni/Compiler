Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    COMMA
    END
    LBRACKET
    LSHIFT
    MODULO
    NOT
    OR
    PERIOD
    RBRACKET
    RSHIFT
    XOR

Grammar

Rule 0     S' -> start
Rule 1     start -> INIT body
Rule 2     body -> LBRACE all_sentences RBRACE
Rule 3     all_sentences -> all_sentences list_sentences
Rule 4     all_sentences -> sentence
Rule 5     list_sentences -> sentence
Rule 6     sentence -> declaration
Rule 7     sentence -> assign
Rule 8     sentence -> sentence_while
Rule 9     sentence -> sentence_for
Rule 10    sentence -> sentence_if
Rule 11    sentence -> print
Rule 12    sentence -> empty
Rule 13    expression -> expression PLUS expression
Rule 14    expression -> expression MINUS expression
Rule 15    expression -> expression TIMES expression
Rule 16    expression -> expression DIVIDE expression
Rule 17    expression -> MINUS expression
Rule 18    expression -> LPAREN expression RPAREN
Rule 19    expression -> INTEGER
Rule 20    expression -> FLOAT
Rule 21    expression -> ID
Rule 22    sentence_while -> WHILE LPAREN condition RPAREN body
Rule 23    sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body
Rule 24    sentence_if -> IF LPAREN condition RPAREN body
Rule 25    sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body
Rule 26    conditions -> LOR
Rule 27    conditions -> LAND
Rule 28    conditions -> LNOT
Rule 29    conditions -> LT
Rule 30    conditions -> GT
Rule 31    conditions -> LE
Rule 32    conditions -> GE
Rule 33    conditions -> EQ
Rule 34    conditions -> NE
Rule 35    condition -> expression conditions expression
Rule 36    expression -> condition
Rule 37    declaration -> IDTYPE ID SEMI
Rule 38    boolean -> TRUE
Rule 39    boolean -> FALSE
Rule 40    tvariable -> STRING
Rule 41    tvariable -> CHARACTER
Rule 42    tvariable -> boolean
Rule 43    print -> PRINT tvariable SEMI
Rule 44    print -> PRINT expression SEMI
Rule 45    assign -> IDTYPE ID EQUAL tvariable SEMI
Rule 46    assign -> IDTYPE ID EQUAL expression SEMI
Rule 47    assign -> ID EQUAL tvariable SEMI
Rule 48    assign -> ID EQUAL expression SEMI
Rule 49    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
CHARACTER            : 41
COLON                : 
COMMA                : 
DIVIDE               : 16
ELSE                 : 25
END                  : 
EQ                   : 33
EQUAL                : 45 46 47 48
FALSE                : 39
FLOAT                : 20
FOR                  : 23
GE                   : 32
GT                   : 30
ID                   : 21 37 45 46 47 48
IDTYPE               : 37 45 46
IF                   : 24 25
INIT                 : 1
INTEGER              : 19
LAND                 : 27
LBRACE               : 2
LBRACKET             : 
LE                   : 31
LNOT                 : 28
LOR                  : 26
LPAREN               : 18 22 23 24 25 25
LSHIFT               : 
LT                   : 29
MINUS                : 14 17
MODULO               : 
NE                   : 34
NOT                  : 
OR                   : 
PERIOD               : 
PLUS                 : 13
PRINT                : 43 44
RBRACE               : 2
RBRACKET             : 
RPAREN               : 18 22 23 24 25 25
RSHIFT               : 
SEMI                 : 23 37 43 44 45 46 47 48
STRING               : 40
TIMES                : 15
TRUE                 : 38
WHILE                : 22
XOR                  : 
error                : 

Nonterminals, with rules where they appear

all_sentences        : 2 3
assign               : 7 23 23
body                 : 1 22 23 24 25 25
boolean              : 42
condition            : 22 23 24 25 36
conditions           : 35
declaration          : 6
empty                : 12
expression           : 13 13 14 14 15 15 16 16 17 18 35 35 44 46 48
list_sentences       : 3
print                : 11
sentence             : 4 5
sentence_for         : 9
sentence_if          : 10
sentence_while       : 8
start                : 0
tvariable            : 43 45 47

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . INIT body

    INIT            shift and go to state 2

    start                          shift and go to state 1

state 1

    (0) S' -> start .



state 2

    (1) start -> INIT . body
    (2) body -> . LBRACE all_sentences RBRACE

    LBRACE          shift and go to state 4

    body                           shift and go to state 3

state 3

    (1) start -> INIT body .

    $end            reduce using rule 1 (start -> INIT body .)


state 4

    (2) body -> LBRACE . all_sentences RBRACE
    (3) all_sentences -> . all_sentences list_sentences
    (4) all_sentences -> . sentence
    (6) sentence -> . declaration
    (7) sentence -> . assign
    (8) sentence -> . sentence_while
    (9) sentence -> . sentence_for
    (10) sentence -> . sentence_if
    (11) sentence -> . print
    (12) sentence -> . empty
    (37) declaration -> . IDTYPE ID SEMI
    (45) assign -> . IDTYPE ID EQUAL tvariable SEMI
    (46) assign -> . IDTYPE ID EQUAL expression SEMI
    (47) assign -> . ID EQUAL tvariable SEMI
    (48) assign -> . ID EQUAL expression SEMI
    (22) sentence_while -> . WHILE LPAREN condition RPAREN body
    (23) sentence_for -> . FOR LPAREN assign condition SEMI assign RPAREN body
    (24) sentence_if -> . IF LPAREN condition RPAREN body
    (25) sentence_if -> . IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body
    (43) print -> . PRINT tvariable SEMI
    (44) print -> . PRINT expression SEMI
    (49) empty -> .

  ! shift/reduce conflict for IDTYPE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    IDTYPE          shift and go to state 14
    ID              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RBRACE          reduce using rule 49 (empty -> .)

  ! IDTYPE          [ reduce using rule 49 (empty -> .) ]
  ! ID              [ reduce using rule 49 (empty -> .) ]
  ! WHILE           [ reduce using rule 49 (empty -> .) ]
  ! FOR             [ reduce using rule 49 (empty -> .) ]
  ! IF              [ reduce using rule 49 (empty -> .) ]
  ! PRINT           [ reduce using rule 49 (empty -> .) ]

    all_sentences                  shift and go to state 5
    sentence                       shift and go to state 6
    declaration                    shift and go to state 7
    assign                         shift and go to state 8
    sentence_while                 shift and go to state 9
    sentence_for                   shift and go to state 10
    sentence_if                    shift and go to state 11
    print                          shift and go to state 12
    empty                          shift and go to state 13

state 5

    (2) body -> LBRACE all_sentences . RBRACE
    (3) all_sentences -> all_sentences . list_sentences
    (5) list_sentences -> . sentence
    (6) sentence -> . declaration
    (7) sentence -> . assign
    (8) sentence -> . sentence_while
    (9) sentence -> . sentence_for
    (10) sentence -> . sentence_if
    (11) sentence -> . print
    (12) sentence -> . empty
    (37) declaration -> . IDTYPE ID SEMI
    (45) assign -> . IDTYPE ID EQUAL tvariable SEMI
    (46) assign -> . IDTYPE ID EQUAL expression SEMI
    (47) assign -> . ID EQUAL tvariable SEMI
    (48) assign -> . ID EQUAL expression SEMI
    (22) sentence_while -> . WHILE LPAREN condition RPAREN body
    (23) sentence_for -> . FOR LPAREN assign condition SEMI assign RPAREN body
    (24) sentence_if -> . IF LPAREN condition RPAREN body
    (25) sentence_if -> . IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body
    (43) print -> . PRINT tvariable SEMI
    (44) print -> . PRINT expression SEMI
    (49) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for IDTYPE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 20
    IDTYPE          shift and go to state 14
    ID              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 18
    PRINT           shift and go to state 19

  ! RBRACE          [ reduce using rule 49 (empty -> .) ]
  ! IDTYPE          [ reduce using rule 49 (empty -> .) ]
  ! ID              [ reduce using rule 49 (empty -> .) ]
  ! WHILE           [ reduce using rule 49 (empty -> .) ]
  ! FOR             [ reduce using rule 49 (empty -> .) ]
  ! IF              [ reduce using rule 49 (empty -> .) ]
  ! PRINT           [ reduce using rule 49 (empty -> .) ]

    list_sentences                 shift and go to state 21
    sentence                       shift and go to state 22
    declaration                    shift and go to state 7
    assign                         shift and go to state 8
    sentence_while                 shift and go to state 9
    sentence_for                   shift and go to state 10
    sentence_if                    shift and go to state 11
    print                          shift and go to state 12
    empty                          shift and go to state 13

state 6

    (4) all_sentences -> sentence .

    RBRACE          reduce using rule 4 (all_sentences -> sentence .)
    IDTYPE          reduce using rule 4 (all_sentences -> sentence .)
    ID              reduce using rule 4 (all_sentences -> sentence .)
    WHILE           reduce using rule 4 (all_sentences -> sentence .)
    FOR             reduce using rule 4 (all_sentences -> sentence .)
    IF              reduce using rule 4 (all_sentences -> sentence .)
    PRINT           reduce using rule 4 (all_sentences -> sentence .)


state 7

    (6) sentence -> declaration .

    RBRACE          reduce using rule 6 (sentence -> declaration .)
    IDTYPE          reduce using rule 6 (sentence -> declaration .)
    ID              reduce using rule 6 (sentence -> declaration .)
    WHILE           reduce using rule 6 (sentence -> declaration .)
    FOR             reduce using rule 6 (sentence -> declaration .)
    IF              reduce using rule 6 (sentence -> declaration .)
    PRINT           reduce using rule 6 (sentence -> declaration .)


state 8

    (7) sentence -> assign .

    RBRACE          reduce using rule 7 (sentence -> assign .)
    IDTYPE          reduce using rule 7 (sentence -> assign .)
    ID              reduce using rule 7 (sentence -> assign .)
    WHILE           reduce using rule 7 (sentence -> assign .)
    FOR             reduce using rule 7 (sentence -> assign .)
    IF              reduce using rule 7 (sentence -> assign .)
    PRINT           reduce using rule 7 (sentence -> assign .)


state 9

    (8) sentence -> sentence_while .

    RBRACE          reduce using rule 8 (sentence -> sentence_while .)
    IDTYPE          reduce using rule 8 (sentence -> sentence_while .)
    ID              reduce using rule 8 (sentence -> sentence_while .)
    WHILE           reduce using rule 8 (sentence -> sentence_while .)
    FOR             reduce using rule 8 (sentence -> sentence_while .)
    IF              reduce using rule 8 (sentence -> sentence_while .)
    PRINT           reduce using rule 8 (sentence -> sentence_while .)


state 10

    (9) sentence -> sentence_for .

    RBRACE          reduce using rule 9 (sentence -> sentence_for .)
    IDTYPE          reduce using rule 9 (sentence -> sentence_for .)
    ID              reduce using rule 9 (sentence -> sentence_for .)
    WHILE           reduce using rule 9 (sentence -> sentence_for .)
    FOR             reduce using rule 9 (sentence -> sentence_for .)
    IF              reduce using rule 9 (sentence -> sentence_for .)
    PRINT           reduce using rule 9 (sentence -> sentence_for .)


state 11

    (10) sentence -> sentence_if .

    RBRACE          reduce using rule 10 (sentence -> sentence_if .)
    IDTYPE          reduce using rule 10 (sentence -> sentence_if .)
    ID              reduce using rule 10 (sentence -> sentence_if .)
    WHILE           reduce using rule 10 (sentence -> sentence_if .)
    FOR             reduce using rule 10 (sentence -> sentence_if .)
    IF              reduce using rule 10 (sentence -> sentence_if .)
    PRINT           reduce using rule 10 (sentence -> sentence_if .)


state 12

    (11) sentence -> print .

    RBRACE          reduce using rule 11 (sentence -> print .)
    IDTYPE          reduce using rule 11 (sentence -> print .)
    ID              reduce using rule 11 (sentence -> print .)
    WHILE           reduce using rule 11 (sentence -> print .)
    FOR             reduce using rule 11 (sentence -> print .)
    IF              reduce using rule 11 (sentence -> print .)
    PRINT           reduce using rule 11 (sentence -> print .)


state 13

    (12) sentence -> empty .

    RBRACE          reduce using rule 12 (sentence -> empty .)
    IDTYPE          reduce using rule 12 (sentence -> empty .)
    ID              reduce using rule 12 (sentence -> empty .)
    WHILE           reduce using rule 12 (sentence -> empty .)
    FOR             reduce using rule 12 (sentence -> empty .)
    IF              reduce using rule 12 (sentence -> empty .)
    PRINT           reduce using rule 12 (sentence -> empty .)


state 14

    (37) declaration -> IDTYPE . ID SEMI
    (45) assign -> IDTYPE . ID EQUAL tvariable SEMI
    (46) assign -> IDTYPE . ID EQUAL expression SEMI

    ID              shift and go to state 23


state 15

    (47) assign -> ID . EQUAL tvariable SEMI
    (48) assign -> ID . EQUAL expression SEMI

    EQUAL           shift and go to state 24


state 16

    (22) sentence_while -> WHILE . LPAREN condition RPAREN body

    LPAREN          shift and go to state 25


state 17

    (23) sentence_for -> FOR . LPAREN assign condition SEMI assign RPAREN body

    LPAREN          shift and go to state 26


state 18

    (24) sentence_if -> IF . LPAREN condition RPAREN body
    (25) sentence_if -> IF . LPAREN condition RPAREN body ELSE LPAREN RPAREN body

    LPAREN          shift and go to state 27


state 19

    (43) print -> PRINT . tvariable SEMI
    (44) print -> PRINT . expression SEMI
    (40) tvariable -> . STRING
    (41) tvariable -> . CHARACTER
    (42) tvariable -> . boolean
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (35) condition -> . expression conditions expression

    STRING          shift and go to state 30
    CHARACTER       shift and go to state 31
    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    tvariable                      shift and go to state 28
    expression                     shift and go to state 29
    boolean                        shift and go to state 32
    condition                      shift and go to state 38

state 20

    (2) body -> LBRACE all_sentences RBRACE .

    $end            reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    RBRACE          reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    IDTYPE          reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    ID              reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    WHILE           reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    FOR             reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    IF              reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    PRINT           reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)
    ELSE            reduce using rule 2 (body -> LBRACE all_sentences RBRACE .)


state 21

    (3) all_sentences -> all_sentences list_sentences .

    RBRACE          reduce using rule 3 (all_sentences -> all_sentences list_sentences .)
    IDTYPE          reduce using rule 3 (all_sentences -> all_sentences list_sentences .)
    ID              reduce using rule 3 (all_sentences -> all_sentences list_sentences .)
    WHILE           reduce using rule 3 (all_sentences -> all_sentences list_sentences .)
    FOR             reduce using rule 3 (all_sentences -> all_sentences list_sentences .)
    IF              reduce using rule 3 (all_sentences -> all_sentences list_sentences .)
    PRINT           reduce using rule 3 (all_sentences -> all_sentences list_sentences .)


state 22

    (5) list_sentences -> sentence .

    RBRACE          reduce using rule 5 (list_sentences -> sentence .)
    IDTYPE          reduce using rule 5 (list_sentences -> sentence .)
    ID              reduce using rule 5 (list_sentences -> sentence .)
    WHILE           reduce using rule 5 (list_sentences -> sentence .)
    FOR             reduce using rule 5 (list_sentences -> sentence .)
    IF              reduce using rule 5 (list_sentences -> sentence .)
    PRINT           reduce using rule 5 (list_sentences -> sentence .)


state 23

    (37) declaration -> IDTYPE ID . SEMI
    (45) assign -> IDTYPE ID . EQUAL tvariable SEMI
    (46) assign -> IDTYPE ID . EQUAL expression SEMI

    SEMI            shift and go to state 41
    EQUAL           shift and go to state 42


state 24

    (47) assign -> ID EQUAL . tvariable SEMI
    (48) assign -> ID EQUAL . expression SEMI
    (40) tvariable -> . STRING
    (41) tvariable -> . CHARACTER
    (42) tvariable -> . boolean
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (35) condition -> . expression conditions expression

    STRING          shift and go to state 30
    CHARACTER       shift and go to state 31
    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    tvariable                      shift and go to state 43
    expression                     shift and go to state 44
    boolean                        shift and go to state 32
    condition                      shift and go to state 38

state 25

    (22) sentence_while -> WHILE LPAREN . condition RPAREN body
    (35) condition -> . expression conditions expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    condition                      shift and go to state 45
    expression                     shift and go to state 46

state 26

    (23) sentence_for -> FOR LPAREN . assign condition SEMI assign RPAREN body
    (45) assign -> . IDTYPE ID EQUAL tvariable SEMI
    (46) assign -> . IDTYPE ID EQUAL expression SEMI
    (47) assign -> . ID EQUAL tvariable SEMI
    (48) assign -> . ID EQUAL expression SEMI

    IDTYPE          shift and go to state 48
    ID              shift and go to state 15

    assign                         shift and go to state 47

state 27

    (24) sentence_if -> IF LPAREN . condition RPAREN body
    (25) sentence_if -> IF LPAREN . condition RPAREN body ELSE LPAREN RPAREN body
    (35) condition -> . expression conditions expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    condition                      shift and go to state 49
    expression                     shift and go to state 46

state 28

    (43) print -> PRINT tvariable . SEMI

    SEMI            shift and go to state 50


state 29

    (44) print -> PRINT expression . SEMI
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOR             shift and go to state 57
    LAND            shift and go to state 58
    LNOT            shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    EQ              shift and go to state 64
    NE              shift and go to state 65

    conditions                     shift and go to state 56

state 30

    (40) tvariable -> STRING .

    SEMI            reduce using rule 40 (tvariable -> STRING .)


state 31

    (41) tvariable -> CHARACTER .

    SEMI            reduce using rule 41 (tvariable -> CHARACTER .)


state 32

    (42) tvariable -> boolean .

    SEMI            reduce using rule 42 (tvariable -> boolean .)


state 33

    (17) expression -> MINUS . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (35) condition -> . expression conditions expression

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    expression                     shift and go to state 66
    condition                      shift and go to state 38

state 34

    (18) expression -> LPAREN . expression RPAREN
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (35) condition -> . expression conditions expression

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    expression                     shift and go to state 67
    condition                      shift and go to state 38

state 35

    (19) expression -> INTEGER .

    SEMI            reduce using rule 19 (expression -> INTEGER .)
    PLUS            reduce using rule 19 (expression -> INTEGER .)
    MINUS           reduce using rule 19 (expression -> INTEGER .)
    TIMES           reduce using rule 19 (expression -> INTEGER .)
    DIVIDE          reduce using rule 19 (expression -> INTEGER .)
    LOR             reduce using rule 19 (expression -> INTEGER .)
    LAND            reduce using rule 19 (expression -> INTEGER .)
    LNOT            reduce using rule 19 (expression -> INTEGER .)
    LT              reduce using rule 19 (expression -> INTEGER .)
    GT              reduce using rule 19 (expression -> INTEGER .)
    LE              reduce using rule 19 (expression -> INTEGER .)
    GE              reduce using rule 19 (expression -> INTEGER .)
    EQ              reduce using rule 19 (expression -> INTEGER .)
    NE              reduce using rule 19 (expression -> INTEGER .)
    RPAREN          reduce using rule 19 (expression -> INTEGER .)


state 36

    (20) expression -> FLOAT .

    SEMI            reduce using rule 20 (expression -> FLOAT .)
    PLUS            reduce using rule 20 (expression -> FLOAT .)
    MINUS           reduce using rule 20 (expression -> FLOAT .)
    TIMES           reduce using rule 20 (expression -> FLOAT .)
    DIVIDE          reduce using rule 20 (expression -> FLOAT .)
    LOR             reduce using rule 20 (expression -> FLOAT .)
    LAND            reduce using rule 20 (expression -> FLOAT .)
    LNOT            reduce using rule 20 (expression -> FLOAT .)
    LT              reduce using rule 20 (expression -> FLOAT .)
    GT              reduce using rule 20 (expression -> FLOAT .)
    LE              reduce using rule 20 (expression -> FLOAT .)
    GE              reduce using rule 20 (expression -> FLOAT .)
    EQ              reduce using rule 20 (expression -> FLOAT .)
    NE              reduce using rule 20 (expression -> FLOAT .)
    RPAREN          reduce using rule 20 (expression -> FLOAT .)


state 37

    (21) expression -> ID .

    SEMI            reduce using rule 21 (expression -> ID .)
    PLUS            reduce using rule 21 (expression -> ID .)
    MINUS           reduce using rule 21 (expression -> ID .)
    TIMES           reduce using rule 21 (expression -> ID .)
    DIVIDE          reduce using rule 21 (expression -> ID .)
    LOR             reduce using rule 21 (expression -> ID .)
    LAND            reduce using rule 21 (expression -> ID .)
    LNOT            reduce using rule 21 (expression -> ID .)
    LT              reduce using rule 21 (expression -> ID .)
    GT              reduce using rule 21 (expression -> ID .)
    LE              reduce using rule 21 (expression -> ID .)
    GE              reduce using rule 21 (expression -> ID .)
    EQ              reduce using rule 21 (expression -> ID .)
    NE              reduce using rule 21 (expression -> ID .)
    RPAREN          reduce using rule 21 (expression -> ID .)


state 38

    (36) expression -> condition .

    SEMI            reduce using rule 36 (expression -> condition .)
    PLUS            reduce using rule 36 (expression -> condition .)
    MINUS           reduce using rule 36 (expression -> condition .)
    TIMES           reduce using rule 36 (expression -> condition .)
    DIVIDE          reduce using rule 36 (expression -> condition .)
    LOR             reduce using rule 36 (expression -> condition .)
    LAND            reduce using rule 36 (expression -> condition .)
    LNOT            reduce using rule 36 (expression -> condition .)
    LT              reduce using rule 36 (expression -> condition .)
    GT              reduce using rule 36 (expression -> condition .)
    LE              reduce using rule 36 (expression -> condition .)
    GE              reduce using rule 36 (expression -> condition .)
    EQ              reduce using rule 36 (expression -> condition .)
    NE              reduce using rule 36 (expression -> condition .)
    RPAREN          reduce using rule 36 (expression -> condition .)


state 39

    (38) boolean -> TRUE .

    SEMI            reduce using rule 38 (boolean -> TRUE .)


state 40

    (39) boolean -> FALSE .

    SEMI            reduce using rule 39 (boolean -> FALSE .)


state 41

    (37) declaration -> IDTYPE ID SEMI .

    RBRACE          reduce using rule 37 (declaration -> IDTYPE ID SEMI .)
    IDTYPE          reduce using rule 37 (declaration -> IDTYPE ID SEMI .)
    ID              reduce using rule 37 (declaration -> IDTYPE ID SEMI .)
    WHILE           reduce using rule 37 (declaration -> IDTYPE ID SEMI .)
    FOR             reduce using rule 37 (declaration -> IDTYPE ID SEMI .)
    IF              reduce using rule 37 (declaration -> IDTYPE ID SEMI .)
    PRINT           reduce using rule 37 (declaration -> IDTYPE ID SEMI .)


state 42

    (45) assign -> IDTYPE ID EQUAL . tvariable SEMI
    (46) assign -> IDTYPE ID EQUAL . expression SEMI
    (40) tvariable -> . STRING
    (41) tvariable -> . CHARACTER
    (42) tvariable -> . boolean
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (35) condition -> . expression conditions expression

    STRING          shift and go to state 30
    CHARACTER       shift and go to state 31
    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40

    tvariable                      shift and go to state 68
    expression                     shift and go to state 69
    boolean                        shift and go to state 32
    condition                      shift and go to state 38

state 43

    (47) assign -> ID EQUAL tvariable . SEMI

    SEMI            shift and go to state 70


state 44

    (48) assign -> ID EQUAL expression . SEMI
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            shift and go to state 71
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOR             shift and go to state 57
    LAND            shift and go to state 58
    LNOT            shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    EQ              shift and go to state 64
    NE              shift and go to state 65

    conditions                     shift and go to state 56

state 45

    (22) sentence_while -> WHILE LPAREN condition . RPAREN body
    (36) expression -> condition .

    RPAREN          shift and go to state 72
    PLUS            reduce using rule 36 (expression -> condition .)
    MINUS           reduce using rule 36 (expression -> condition .)
    TIMES           reduce using rule 36 (expression -> condition .)
    DIVIDE          reduce using rule 36 (expression -> condition .)
    LOR             reduce using rule 36 (expression -> condition .)
    LAND            reduce using rule 36 (expression -> condition .)
    LNOT            reduce using rule 36 (expression -> condition .)
    LT              reduce using rule 36 (expression -> condition .)
    GT              reduce using rule 36 (expression -> condition .)
    LE              reduce using rule 36 (expression -> condition .)
    GE              reduce using rule 36 (expression -> condition .)
    EQ              reduce using rule 36 (expression -> condition .)
    NE              reduce using rule 36 (expression -> condition .)


state 46

    (35) condition -> expression . conditions expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOR             shift and go to state 57
    LAND            shift and go to state 58
    LNOT            shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    EQ              shift and go to state 64
    NE              shift and go to state 65

    conditions                     shift and go to state 56

state 47

    (23) sentence_for -> FOR LPAREN assign . condition SEMI assign RPAREN body
    (35) condition -> . expression conditions expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    condition                      shift and go to state 73
    expression                     shift and go to state 46

state 48

    (45) assign -> IDTYPE . ID EQUAL tvariable SEMI
    (46) assign -> IDTYPE . ID EQUAL expression SEMI

    ID              shift and go to state 74


state 49

    (24) sentence_if -> IF LPAREN condition . RPAREN body
    (25) sentence_if -> IF LPAREN condition . RPAREN body ELSE LPAREN RPAREN body
    (36) expression -> condition .

    RPAREN          shift and go to state 75
    PLUS            reduce using rule 36 (expression -> condition .)
    MINUS           reduce using rule 36 (expression -> condition .)
    TIMES           reduce using rule 36 (expression -> condition .)
    DIVIDE          reduce using rule 36 (expression -> condition .)
    LOR             reduce using rule 36 (expression -> condition .)
    LAND            reduce using rule 36 (expression -> condition .)
    LNOT            reduce using rule 36 (expression -> condition .)
    LT              reduce using rule 36 (expression -> condition .)
    GT              reduce using rule 36 (expression -> condition .)
    LE              reduce using rule 36 (expression -> condition .)
    GE              reduce using rule 36 (expression -> condition .)
    EQ              reduce using rule 36 (expression -> condition .)
    NE              reduce using rule 36 (expression -> condition .)


state 50

    (43) print -> PRINT tvariable SEMI .

    RBRACE          reduce using rule 43 (print -> PRINT tvariable SEMI .)
    IDTYPE          reduce using rule 43 (print -> PRINT tvariable SEMI .)
    ID              reduce using rule 43 (print -> PRINT tvariable SEMI .)
    WHILE           reduce using rule 43 (print -> PRINT tvariable SEMI .)
    FOR             reduce using rule 43 (print -> PRINT tvariable SEMI .)
    IF              reduce using rule 43 (print -> PRINT tvariable SEMI .)
    PRINT           reduce using rule 43 (print -> PRINT tvariable SEMI .)


state 51

    (44) print -> PRINT expression SEMI .

    RBRACE          reduce using rule 44 (print -> PRINT expression SEMI .)
    IDTYPE          reduce using rule 44 (print -> PRINT expression SEMI .)
    ID              reduce using rule 44 (print -> PRINT expression SEMI .)
    WHILE           reduce using rule 44 (print -> PRINT expression SEMI .)
    FOR             reduce using rule 44 (print -> PRINT expression SEMI .)
    IF              reduce using rule 44 (print -> PRINT expression SEMI .)
    PRINT           reduce using rule 44 (print -> PRINT expression SEMI .)


state 52

    (13) expression -> expression PLUS . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (35) condition -> . expression conditions expression

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    expression                     shift and go to state 76
    condition                      shift and go to state 38

state 53

    (14) expression -> expression MINUS . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (35) condition -> . expression conditions expression

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    expression                     shift and go to state 77
    condition                      shift and go to state 38

state 54

    (15) expression -> expression TIMES . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (35) condition -> . expression conditions expression

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    expression                     shift and go to state 78
    condition                      shift and go to state 38

state 55

    (16) expression -> expression DIVIDE . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (35) condition -> . expression conditions expression

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    expression                     shift and go to state 79
    condition                      shift and go to state 38

state 56

    (35) condition -> expression conditions . expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . MINUS expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . INTEGER
    (20) expression -> . FLOAT
    (21) expression -> . ID
    (36) expression -> . condition
    (35) condition -> . expression conditions expression

    MINUS           shift and go to state 33
    LPAREN          shift and go to state 34
    INTEGER         shift and go to state 35
    FLOAT           shift and go to state 36
    ID              shift and go to state 37

    expression                     shift and go to state 80
    condition                      shift and go to state 38

state 57

    (26) conditions -> LOR .

    MINUS           reduce using rule 26 (conditions -> LOR .)
    LPAREN          reduce using rule 26 (conditions -> LOR .)
    INTEGER         reduce using rule 26 (conditions -> LOR .)
    FLOAT           reduce using rule 26 (conditions -> LOR .)
    ID              reduce using rule 26 (conditions -> LOR .)


state 58

    (27) conditions -> LAND .

    MINUS           reduce using rule 27 (conditions -> LAND .)
    LPAREN          reduce using rule 27 (conditions -> LAND .)
    INTEGER         reduce using rule 27 (conditions -> LAND .)
    FLOAT           reduce using rule 27 (conditions -> LAND .)
    ID              reduce using rule 27 (conditions -> LAND .)


state 59

    (28) conditions -> LNOT .

    MINUS           reduce using rule 28 (conditions -> LNOT .)
    LPAREN          reduce using rule 28 (conditions -> LNOT .)
    INTEGER         reduce using rule 28 (conditions -> LNOT .)
    FLOAT           reduce using rule 28 (conditions -> LNOT .)
    ID              reduce using rule 28 (conditions -> LNOT .)


state 60

    (29) conditions -> LT .

    MINUS           reduce using rule 29 (conditions -> LT .)
    LPAREN          reduce using rule 29 (conditions -> LT .)
    INTEGER         reduce using rule 29 (conditions -> LT .)
    FLOAT           reduce using rule 29 (conditions -> LT .)
    ID              reduce using rule 29 (conditions -> LT .)


state 61

    (30) conditions -> GT .

    MINUS           reduce using rule 30 (conditions -> GT .)
    LPAREN          reduce using rule 30 (conditions -> GT .)
    INTEGER         reduce using rule 30 (conditions -> GT .)
    FLOAT           reduce using rule 30 (conditions -> GT .)
    ID              reduce using rule 30 (conditions -> GT .)


state 62

    (31) conditions -> LE .

    MINUS           reduce using rule 31 (conditions -> LE .)
    LPAREN          reduce using rule 31 (conditions -> LE .)
    INTEGER         reduce using rule 31 (conditions -> LE .)
    FLOAT           reduce using rule 31 (conditions -> LE .)
    ID              reduce using rule 31 (conditions -> LE .)


state 63

    (32) conditions -> GE .

    MINUS           reduce using rule 32 (conditions -> GE .)
    LPAREN          reduce using rule 32 (conditions -> GE .)
    INTEGER         reduce using rule 32 (conditions -> GE .)
    FLOAT           reduce using rule 32 (conditions -> GE .)
    ID              reduce using rule 32 (conditions -> GE .)


state 64

    (33) conditions -> EQ .

    MINUS           reduce using rule 33 (conditions -> EQ .)
    LPAREN          reduce using rule 33 (conditions -> EQ .)
    INTEGER         reduce using rule 33 (conditions -> EQ .)
    FLOAT           reduce using rule 33 (conditions -> EQ .)
    ID              reduce using rule 33 (conditions -> EQ .)


state 65

    (34) conditions -> NE .

    MINUS           reduce using rule 34 (conditions -> NE .)
    LPAREN          reduce using rule 34 (conditions -> NE .)
    INTEGER         reduce using rule 34 (conditions -> NE .)
    FLOAT           reduce using rule 34 (conditions -> NE .)
    ID              reduce using rule 34 (conditions -> NE .)


state 66

    (17) expression -> MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            reduce using rule 17 (expression -> MINUS expression .)
    PLUS            reduce using rule 17 (expression -> MINUS expression .)
    MINUS           reduce using rule 17 (expression -> MINUS expression .)
    TIMES           reduce using rule 17 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 17 (expression -> MINUS expression .)
    LOR             reduce using rule 17 (expression -> MINUS expression .)
    LAND            reduce using rule 17 (expression -> MINUS expression .)
    LNOT            reduce using rule 17 (expression -> MINUS expression .)
    LT              reduce using rule 17 (expression -> MINUS expression .)
    GT              reduce using rule 17 (expression -> MINUS expression .)
    LE              reduce using rule 17 (expression -> MINUS expression .)
    GE              reduce using rule 17 (expression -> MINUS expression .)
    EQ              reduce using rule 17 (expression -> MINUS expression .)
    NE              reduce using rule 17 (expression -> MINUS expression .)
    RPAREN          reduce using rule 17 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! LOR             [ shift and go to state 57 ]
  ! LAND            [ shift and go to state 58 ]
  ! LNOT            [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 65 ]

    conditions                     shift and go to state 56

state 67

    (18) expression -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    RPAREN          shift and go to state 81
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOR             shift and go to state 57
    LAND            shift and go to state 58
    LNOT            shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    EQ              shift and go to state 64
    NE              shift and go to state 65

    conditions                     shift and go to state 56

state 68

    (45) assign -> IDTYPE ID EQUAL tvariable . SEMI

    SEMI            shift and go to state 82


state 69

    (46) assign -> IDTYPE ID EQUAL expression . SEMI
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            shift and go to state 83
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOR             shift and go to state 57
    LAND            shift and go to state 58
    LNOT            shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    EQ              shift and go to state 64
    NE              shift and go to state 65

    conditions                     shift and go to state 56

state 70

    (47) assign -> ID EQUAL tvariable SEMI .

    RBRACE          reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    IDTYPE          reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    ID              reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    WHILE           reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    FOR             reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    IF              reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    PRINT           reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    MINUS           reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    LPAREN          reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    INTEGER         reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    FLOAT           reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)
    RPAREN          reduce using rule 47 (assign -> ID EQUAL tvariable SEMI .)


state 71

    (48) assign -> ID EQUAL expression SEMI .

    RBRACE          reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    IDTYPE          reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    ID              reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    WHILE           reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    FOR             reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    IF              reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    PRINT           reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    MINUS           reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    LPAREN          reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    INTEGER         reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    FLOAT           reduce using rule 48 (assign -> ID EQUAL expression SEMI .)
    RPAREN          reduce using rule 48 (assign -> ID EQUAL expression SEMI .)


state 72

    (22) sentence_while -> WHILE LPAREN condition RPAREN . body
    (2) body -> . LBRACE all_sentences RBRACE

    LBRACE          shift and go to state 4

    body                           shift and go to state 84

state 73

    (23) sentence_for -> FOR LPAREN assign condition . SEMI assign RPAREN body
    (36) expression -> condition .

    SEMI            shift and go to state 85
    PLUS            reduce using rule 36 (expression -> condition .)
    MINUS           reduce using rule 36 (expression -> condition .)
    TIMES           reduce using rule 36 (expression -> condition .)
    DIVIDE          reduce using rule 36 (expression -> condition .)
    LOR             reduce using rule 36 (expression -> condition .)
    LAND            reduce using rule 36 (expression -> condition .)
    LNOT            reduce using rule 36 (expression -> condition .)
    LT              reduce using rule 36 (expression -> condition .)
    GT              reduce using rule 36 (expression -> condition .)
    LE              reduce using rule 36 (expression -> condition .)
    GE              reduce using rule 36 (expression -> condition .)
    EQ              reduce using rule 36 (expression -> condition .)
    NE              reduce using rule 36 (expression -> condition .)


state 74

    (45) assign -> IDTYPE ID . EQUAL tvariable SEMI
    (46) assign -> IDTYPE ID . EQUAL expression SEMI

    EQUAL           shift and go to state 42


state 75

    (24) sentence_if -> IF LPAREN condition RPAREN . body
    (25) sentence_if -> IF LPAREN condition RPAREN . body ELSE LPAREN RPAREN body
    (2) body -> . LBRACE all_sentences RBRACE

    LBRACE          shift and go to state 4

    body                           shift and go to state 86

state 76

    (13) expression -> expression PLUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            reduce using rule 13 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 13 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 13 (expression -> expression PLUS expression .)
    LOR             reduce using rule 13 (expression -> expression PLUS expression .)
    LAND            reduce using rule 13 (expression -> expression PLUS expression .)
    LNOT            reduce using rule 13 (expression -> expression PLUS expression .)
    LT              reduce using rule 13 (expression -> expression PLUS expression .)
    GT              reduce using rule 13 (expression -> expression PLUS expression .)
    LE              reduce using rule 13 (expression -> expression PLUS expression .)
    GE              reduce using rule 13 (expression -> expression PLUS expression .)
    EQ              reduce using rule 13 (expression -> expression PLUS expression .)
    NE              reduce using rule 13 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! LOR             [ shift and go to state 57 ]
  ! LAND            [ shift and go to state 58 ]
  ! LNOT            [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 65 ]

    conditions                     shift and go to state 56

state 77

    (14) expression -> expression MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            reduce using rule 14 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 14 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 14 (expression -> expression MINUS expression .)
    LOR             reduce using rule 14 (expression -> expression MINUS expression .)
    LAND            reduce using rule 14 (expression -> expression MINUS expression .)
    LNOT            reduce using rule 14 (expression -> expression MINUS expression .)
    LT              reduce using rule 14 (expression -> expression MINUS expression .)
    GT              reduce using rule 14 (expression -> expression MINUS expression .)
    LE              reduce using rule 14 (expression -> expression MINUS expression .)
    GE              reduce using rule 14 (expression -> expression MINUS expression .)
    EQ              reduce using rule 14 (expression -> expression MINUS expression .)
    NE              reduce using rule 14 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55

  ! TIMES           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! LOR             [ shift and go to state 57 ]
  ! LAND            [ shift and go to state 58 ]
  ! LNOT            [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 65 ]

    conditions                     shift and go to state 56

state 78

    (15) expression -> expression TIMES expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            reduce using rule 15 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 15 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 15 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 15 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 15 (expression -> expression TIMES expression .)
    LOR             reduce using rule 15 (expression -> expression TIMES expression .)
    LAND            reduce using rule 15 (expression -> expression TIMES expression .)
    LNOT            reduce using rule 15 (expression -> expression TIMES expression .)
    LT              reduce using rule 15 (expression -> expression TIMES expression .)
    GT              reduce using rule 15 (expression -> expression TIMES expression .)
    LE              reduce using rule 15 (expression -> expression TIMES expression .)
    GE              reduce using rule 15 (expression -> expression TIMES expression .)
    EQ              reduce using rule 15 (expression -> expression TIMES expression .)
    NE              reduce using rule 15 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 15 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! LOR             [ shift and go to state 57 ]
  ! LAND            [ shift and go to state 58 ]
  ! LNOT            [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 65 ]

    conditions                     shift and go to state 56

state 79

    (16) expression -> expression DIVIDE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

    SEMI            reduce using rule 16 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 16 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 16 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 16 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 16 (expression -> expression DIVIDE expression .)
    LOR             reduce using rule 16 (expression -> expression DIVIDE expression .)
    LAND            reduce using rule 16 (expression -> expression DIVIDE expression .)
    LNOT            reduce using rule 16 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 16 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 16 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 16 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 16 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 16 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 16 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 16 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! MINUS           [ shift and go to state 53 ]
  ! TIMES           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! LOR             [ shift and go to state 57 ]
  ! LAND            [ shift and go to state 58 ]
  ! LNOT            [ shift and go to state 59 ]
  ! LT              [ shift and go to state 60 ]
  ! GT              [ shift and go to state 61 ]
  ! LE              [ shift and go to state 62 ]
  ! GE              [ shift and go to state 63 ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 65 ]

    conditions                     shift and go to state 56

state 80

    (35) condition -> expression conditions expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (35) condition -> expression . conditions expression
    (26) conditions -> . LOR
    (27) conditions -> . LAND
    (28) conditions -> . LNOT
    (29) conditions -> . LT
    (30) conditions -> . GT
    (31) conditions -> . LE
    (32) conditions -> . GE
    (33) conditions -> . EQ
    (34) conditions -> . NE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMI            reduce using rule 35 (condition -> expression conditions expression .)
    RPAREN          reduce using rule 35 (condition -> expression conditions expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    LOR             shift and go to state 57
    LAND            shift and go to state 58
    LNOT            shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    LE              shift and go to state 62
    GE              shift and go to state 63
    EQ              shift and go to state 64
    NE              shift and go to state 65

  ! PLUS            [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! MINUS           [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! TIMES           [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! DIVIDE          [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! LOR             [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! LAND            [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! LNOT            [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! LT              [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! GT              [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! LE              [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! GE              [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! EQ              [ reduce using rule 35 (condition -> expression conditions expression .) ]
  ! NE              [ reduce using rule 35 (condition -> expression conditions expression .) ]

    conditions                     shift and go to state 56

state 81

    (18) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LNOT            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)


state 82

    (45) assign -> IDTYPE ID EQUAL tvariable SEMI .

    RBRACE          reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    IDTYPE          reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    ID              reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    WHILE           reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    FOR             reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    IF              reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    PRINT           reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    MINUS           reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    LPAREN          reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    INTEGER         reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    FLOAT           reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)
    RPAREN          reduce using rule 45 (assign -> IDTYPE ID EQUAL tvariable SEMI .)


state 83

    (46) assign -> IDTYPE ID EQUAL expression SEMI .

    RBRACE          reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    IDTYPE          reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    ID              reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    WHILE           reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    FOR             reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    IF              reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    PRINT           reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    MINUS           reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    LPAREN          reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    INTEGER         reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    FLOAT           reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)
    RPAREN          reduce using rule 46 (assign -> IDTYPE ID EQUAL expression SEMI .)


state 84

    (22) sentence_while -> WHILE LPAREN condition RPAREN body .

    RBRACE          reduce using rule 22 (sentence_while -> WHILE LPAREN condition RPAREN body .)
    IDTYPE          reduce using rule 22 (sentence_while -> WHILE LPAREN condition RPAREN body .)
    ID              reduce using rule 22 (sentence_while -> WHILE LPAREN condition RPAREN body .)
    WHILE           reduce using rule 22 (sentence_while -> WHILE LPAREN condition RPAREN body .)
    FOR             reduce using rule 22 (sentence_while -> WHILE LPAREN condition RPAREN body .)
    IF              reduce using rule 22 (sentence_while -> WHILE LPAREN condition RPAREN body .)
    PRINT           reduce using rule 22 (sentence_while -> WHILE LPAREN condition RPAREN body .)


state 85

    (23) sentence_for -> FOR LPAREN assign condition SEMI . assign RPAREN body
    (45) assign -> . IDTYPE ID EQUAL tvariable SEMI
    (46) assign -> . IDTYPE ID EQUAL expression SEMI
    (47) assign -> . ID EQUAL tvariable SEMI
    (48) assign -> . ID EQUAL expression SEMI

    IDTYPE          shift and go to state 48
    ID              shift and go to state 15

    assign                         shift and go to state 87

state 86

    (24) sentence_if -> IF LPAREN condition RPAREN body .
    (25) sentence_if -> IF LPAREN condition RPAREN body . ELSE LPAREN RPAREN body

    RBRACE          reduce using rule 24 (sentence_if -> IF LPAREN condition RPAREN body .)
    IDTYPE          reduce using rule 24 (sentence_if -> IF LPAREN condition RPAREN body .)
    ID              reduce using rule 24 (sentence_if -> IF LPAREN condition RPAREN body .)
    WHILE           reduce using rule 24 (sentence_if -> IF LPAREN condition RPAREN body .)
    FOR             reduce using rule 24 (sentence_if -> IF LPAREN condition RPAREN body .)
    IF              reduce using rule 24 (sentence_if -> IF LPAREN condition RPAREN body .)
    PRINT           reduce using rule 24 (sentence_if -> IF LPAREN condition RPAREN body .)
    ELSE            shift and go to state 88


state 87

    (23) sentence_for -> FOR LPAREN assign condition SEMI assign . RPAREN body

    RPAREN          shift and go to state 89


state 88

    (25) sentence_if -> IF LPAREN condition RPAREN body ELSE . LPAREN RPAREN body

    LPAREN          shift and go to state 90


state 89

    (23) sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN . body
    (2) body -> . LBRACE all_sentences RBRACE

    LBRACE          shift and go to state 4

    body                           shift and go to state 91

state 90

    (25) sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN . RPAREN body

    RPAREN          shift and go to state 92


state 91

    (23) sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .

    RBRACE          reduce using rule 23 (sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .)
    IDTYPE          reduce using rule 23 (sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .)
    ID              reduce using rule 23 (sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .)
    WHILE           reduce using rule 23 (sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .)
    FOR             reduce using rule 23 (sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .)
    IF              reduce using rule 23 (sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .)
    PRINT           reduce using rule 23 (sentence_for -> FOR LPAREN assign condition SEMI assign RPAREN body .)


state 92

    (25) sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN . body
    (2) body -> . LBRACE all_sentences RBRACE

    LBRACE          shift and go to state 4

    body                           shift and go to state 93

state 93

    (25) sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .

    RBRACE          reduce using rule 25 (sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .)
    IDTYPE          reduce using rule 25 (sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .)
    ID              reduce using rule 25 (sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .)
    WHILE           reduce using rule 25 (sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .)
    FOR             reduce using rule 25 (sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .)
    IF              reduce using rule 25 (sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .)
    PRINT           reduce using rule 25 (sentence_if -> IF LPAREN condition RPAREN body ELSE LPAREN RPAREN body .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDTYPE in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 5 resolved as shift
WARNING: shift/reduce conflict for IDTYPE in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 5 resolved as shift
WARNING: shift/reduce conflict for FOR in state 5 resolved as shift
WARNING: shift/reduce conflict for IF in state 5 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 5 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 80 resolved as shift
WARNING: shift/reduce conflict for LOR in state 80 resolved as shift
WARNING: shift/reduce conflict for LAND in state 80 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 80 resolved as shift
WARNING: shift/reduce conflict for LT in state 80 resolved as shift
WARNING: shift/reduce conflict for GT in state 80 resolved as shift
WARNING: shift/reduce conflict for LE in state 80 resolved as shift
WARNING: shift/reduce conflict for GE in state 80 resolved as shift
WARNING: shift/reduce conflict for EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NE in state 80 resolved as shift
